const axios = require('axios');
const fs = require('fs');
const FormData = require('form-data');
const https = require('https');

// üëá B·ªè qua ch·ª©ng ch·ªâ HTTPS t·ª± k√Ω khi test c·ª•c b·ªô
const httpsAgent = new https.Agent({ rejectUnauthorized: false });

const API_BASE = 'https://localhost:7153/api';
let token = '';
let createdUserId = null;

// üîê ƒêƒÉng nh·∫≠p admin
async function loginAdmin() {
  const res = await axios.post(`${API_BASE}/auth/login`, {
    email: 'tramkhoinguyen27122@gmail.com',
    password: 'nguyendz271' // ‚ö†Ô∏è C·∫≠p nh·∫≠t m·∫≠t kh·∫©u th·ª±c t·∫ø
  }, { httpsAgent });

  token = res.data.token;
  console.log('üîê ƒêƒÉng nh·∫≠p th√†nh c√¥ng!');
}

// üß™ T·∫°o ng∆∞·ªùi d√πng m·ªõi (Admin)
async function createUser() {
  const form = new FormData();
  form.append('displayName', 'Ng∆∞·ªùi d√πng test');
  form.append('email', `user_${Date.now()}@example.com`);
  form.append('password', 'test123');
  form.append('role', 'User');
  form.append('ImageFile', fs.createReadStream('./test-avatar.jpg'));

  const res = await axios.post(`${API_BASE}/user/register`, form, {
    headers: {
      Authorization: `Bearer ${token}`,
      ...form.getHeaders()
    },
    httpsAgent
  });

  createdUserId = res.data.userID;
  console.log('‚úÖ ƒê√£ t·∫°o ng∆∞·ªùi d√πng:', res.data);
}

// üìÑ Xem danh s√°ch ng∆∞·ªùi d√πng
async function getAllUsers() {
  const res = await axios.get(`${API_BASE}/user`, {
    headers: { Authorization: `Bearer ${token}` },
    httpsAgent
  });
  console.log('üìã T·ªïng s·ªë ng∆∞·ªùi d√πng:', res.data.length);
}

// üìù C·∫≠p nh·∫≠t th√¥ng tin user
async function updateUser() {
  const res = await axios.put(`${API_BASE}/user/${createdUserId}`, {
    displayName: 'T√™n c·∫≠p nh·∫≠t',
    email: 'updateemail1@gmail.com',
    imageUrl: '/data/users/test.jpg',
    role: 'User'
  }, {
    headers: { Authorization: `Bearer ${token}` },
    httpsAgent
  });

  console.log('‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng:', res.data);
}


// ‚ùå Xo√° ng∆∞·ªùi d√πng test
async function deleteUser() {
  const res = await axios.delete(`${API_BASE}/user/${createdUserId}`, {
    headers: { Authorization: `Bearer ${token}` },
    httpsAgent
  });
  console.log('üóëÔ∏è ƒê√£ xo√° ng∆∞·ªùi d√πng test:', res.data);
}

// ==========================
// üîÅ CH·∫†Y C√ÅC B∆Ø·ªöC TEST
// ==========================
(async () => {
  try {
    await loginAdmin();
    await createUser();
    await getAllUsers();
    await updateUser();
    await deleteUser();
  } catch (err) {
    console.error('‚ùå L·ªói:', err.response?.data || err.message);
  }
})();
