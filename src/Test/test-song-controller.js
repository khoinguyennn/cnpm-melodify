const axios = require('axios');
const fs = require('fs');
const FormData = require('form-data');
const https = require('https');

// üëâ B·ªè qua l·ªói SSL self-signed
const httpsAgent = new https.Agent({ rejectUnauthorized: false });

const API_BASE = 'https://localhost:7153/api';
let token = '';
let createdSongId = null;
let artistId = 3; // üëâ Nh·ªõ ƒë·∫£m b·∫£o artist n√†y t·ªìn t·∫°i

// üîê ƒêƒÉng nh·∫≠p Admin
async function loginAdmin() {
  const res = await axios.post(`${API_BASE}/auth/login`, {
    email: 'tramkhoinguyen27122@gmail.com',
    password: 'nguyendz271'
  }, { httpsAgent });

  token = res.data.token;
  console.log('üîê ƒêƒÉng nh·∫≠p th√†nh c√¥ng!');
}

// üÜï T·∫°o b√†i h√°t m·ªõi
async function createSong() {
  const form = new FormData();
  form.append('title', 'B√†i h√°t test');
  form.append('artistId', artistId);
  form.append('album', 'Album test');
  form.append('genre', 'Pop');
  form.append('releaseDate', new Date().toISOString());
  form.append('audioFile', fs.createReadStream('./test-audio.mp3'));
  form.append('imageFile', fs.createReadStream('./test-song.jpg'));

  const res = await axios.post(`${API_BASE}/songs/add`, form, {
    headers: {
      Authorization: `Bearer ${token}`,
      ...form.getHeaders()
    },
    httpsAgent
  });

  createdSongId = res.data.song.songID;
  console.log('‚úÖ ƒê√£ th√™m b√†i h√°t:', res.data.song);
}

// ‚úèÔ∏è C·∫≠p nh·∫≠t b√†i h√°t
async function updateSong() {
  const form = new FormData();
  form.append('title', 'B√†i h√°t ƒë√£ c·∫≠p nh·∫≠t');
  form.append('artistId', artistId);
  form.append('album', 'Album m·ªõi');
  form.append('genre', 'Rock');
  form.append('releaseDate', new Date().toISOString());
  form.append('audioFile', fs.createReadStream('./test-audio.mp3'));
  form.append('imageFile', fs.createReadStream('./test-song.jpg'));

  const res = await axios.put(`${API_BASE}/songs/${createdSongId}`, form, {
    headers: {
      Authorization: `Bearer ${token}`,
      ...form.getHeaders()
    },
    httpsAgent
  });

  console.log('‚úèÔ∏è ƒê√£ c·∫≠p nh·∫≠t b√†i h√°t:', res.data.song);
}

// üìã L·∫•y t·∫•t c·∫£ b√†i h√°t
async function getAllSongs() {
  const res = await axios.get(`${API_BASE}/songs`, { httpsAgent });
  console.log(`üìã C√≥ ${res.data.length} b√†i h√°t.`);
}

// üîç Xem chi ti·∫øt b√†i h√°t
async function getSongDetails() {
  const res = await axios.get(`${API_BASE}/songs/${createdSongId}`, { httpsAgent });
  console.log('üîç Chi ti·∫øt b√†i h√°t:', res.data);
}

// üîç T√¨m ki·∫øm b√†i h√°t
async function searchSongs() {
  const res = await axios.get(`${API_BASE}/songs/search?keyword=ƒë√£ c·∫≠p nh·∫≠t`, { httpsAgent });
  console.log(`üîé T√¨m th·∫•y ${res.data.length} b√†i h√°t.`);
}

// ‚ñ∂Ô∏è Ph√°t nh·∫°c
async function playSong() {
  const res = await axios.get(`${API_BASE}/songs/${createdSongId}/play`, { httpsAgent });
  console.log('‚ñ∂Ô∏è URL ph√°t nh·∫°c:', res.data.url);
}

// üéß L·∫•y theo th·ªÉ lo·∫°i
async function getByGenre() {
  const res = await axios.get(`${API_BASE}/songs/genre/rock`, { httpsAgent });
  console.log(`üéß C√≥ ${res.data.length} b√†i h√°t th·ªÉ lo·∫°i rock.`);
}

// üóëÔ∏è X√≥a b√†i h√°t
async function deleteSong() {
  const res = await axios.delete(`${API_BASE}/songs/${createdSongId}`, {
    headers: { Authorization: `Bearer ${token}` },
    httpsAgent
  });
  console.log('üóëÔ∏è ƒê√£ xo√° b√†i h√°t:', res.data);
}

// ===========================
// üöÄ TH·ª∞C THI TO√ÄN B·ªò TEST
// ===========================
(async () => {
  try {
    await loginAdmin();
    await createSong();
    await updateSong();
    await getAllSongs();
    await getSongDetails();
    await searchSongs();
    await playSong();
    await getByGenre();
    await deleteSong();
  } catch (err) {
    console.error('‚ùå L·ªói:', err.response?.data || err.message);
  }
})();
